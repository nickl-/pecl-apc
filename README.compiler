This document describes how to use the APC mmap version as a pre-compiler/
loader.  Many people have likened this concept to an 'encoder' a la the
Zend Encoder.  I refuse to call APC setup an encoder, choosing instead the
term compiler, as it really does no 'encoding' in the sense that it does
not obfuscate the compiled code at all.  It should be an easy excercise
to write a tool to take an APC compiled file and turn into php code (and 
although I have never tried , nor have any interest in trying, I would wager 
that it would not be enormously more dificult to de-compile Zend Encoder 
files).  To paraphrase Bruce Schneier, using APC to protect your code is a 
method that may work against your kid sister, but not against anyone willing to 
invest resources into decompiling it.

What does a compiler bring you?
A compiler allows you to store the compiled apc objects as files, which can
then be moved to different (but similair platform) systems, where they
will be used in place of (or more accurately in preference to) uncompiled php 
source files.  While this may be a convenient method of distributing code, as 
noted above this is not a secure method.  The compiled php op-tree contains 
more than enough information to recover equivalent php code.

How does it work?

First you need to generate compiled files.

There are currently two supported methods for this:
1) Run APC-mmap on your development server and use the cache files it generates.
More preciely, view your pages on a development server running APC-mmap.  If
you are interested in using a compiled version of index.php, find the 
index.php_apc file and copy that to index.php on your destination machine.
The benefit of this method is that you get no surprises, as you've implicitly
doublechecked that your code runs as expected.

2) Run the 'cgi' version of php (the command-line interpreter) with the APC-mmap
extension, or with APC-mmap compiled in.  Run this on the file you want
to compile, and it and all it's includes will be written as _apc files in
your apc.cachedir.  Take your index.php_apc file (or whatver) and move it
to index.php in your content tree on the target server.

3) Wait, you said there were only 2!  That's right.  A stand-alone compiler
is still in development, but isn't ready yet.  Contributions are welcome.

Then you need to configure the target system.

Pre-compiled source files work with both APC-shm and APC-mmap, so choose
the one you like best.  In your php.ini file add 
apc.check_compiled_source=1
Make sure the compiled files you generated above are renamed as their original 
files and are 'where they belong'.  Make sure all your includes are present
(either compiled or not compiled, APC can tell the difference and use each
appropriately.  This means that _yes_ you can intermix files.)

Start up your server and sit back and enjoy.
